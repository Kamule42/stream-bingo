@use "bulma/sass/utilities/mixins";
@use 'sass:color';
@use "sass:math";
@use "../../../style/_variables" as variables;

:host {
	width: 100%;
	#bingo-wrapper{
		display: flex;
		justify-content: center;
		width: 100%;
	}

	#bingo-root{
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		justify-content: center;

		h3{
			text-align: center;
		}
	}
	
	#grid {
		position: relative;
		display: flex;
		flex-direction: row;
		align-items: stretch;
		justify-content: space-between;
		gap: 1em;
		
		@include mixins.mobile {
			font-size: 0.65rem;
		}
		@include mixins.tablet {
			font-size: 0.85rem;
		}
	}

	#left-spacer, #bingo-actions{
		flex: 1;
	}

	#bingo-actions{
		display: flex;
		flex-direction: column;
		gap: 0.5rem;

		align-items: start;
		justify-content: start;

		::ng-deep .mdi{
			font-size: 1.5em;
		}
	}

	#no-grid {
		display: flex;
		flex-direction: column;
		align-items: center;
		gap: 1em;
	}

	#cells {
		position: relative;
		display: flex;
		flex-direction: column;
		gap: 0;
		border: 0.2px solid var(--bulma-body-color);
		border-radius: 10px;
		overflow: hidden;
		font-size: 1em;
	}

	.cells-row {
		display: flex;
		flex-direction: row;
		gap: 0;
		font-size: 1em;

		&:not(:nth-of-type(4)) {
			border-bottom: 1px solid var(--bulma-body-color);
		}
	}

	.cell {
		position: relative;
		width: min(20vw, 16vh);
		height: min(20vw, 16vh);
		max-width: 150px;
		max-height: 150px;
		padding: 1em;
		background-color: white;
		text-align: center;


		display: flex;
		justify-content: center;
		align-items: center;

		@include mixins.mobile {
			font-size: 0.75rem;
		}

		&:not(:last-of-type) {
			border-right: 1px solid var(--bulma-body-color);
		}

		&.clickable{	
			&:hover{
				background-color: #eee;

			}
			&:active{
				background-color: #ddd;
			}
		}

		.cell-info {
			position: absolute;
			top: 5px;
			right: 5px;

			::ng-deep .p-button {
				width: 1.2rem;
				height: 1.2rem;

				.p-button-icon {
					font-size: 1rem;
				}
			}
		}
	}

	.cell-txt {
		width: 100%;
		height: 100%;

		display: flex;
		align-items: center;
		justify-content: center;

		color: #333;
		position: absolute;
		z-index: 5;
		text-shadow: 0 0 10px #6669, 0 0 3px white;
		font-weight: 700;
		padding: 0.3em;
		font-size: 0.8em;

		&.clickable{
			cursor: pointer;
		}
	}

	.cell-stroke {
		position: absolute;
		z-index: 1;
		width: 90%;
		height: 90%;
		display: flex;
		justify-content: center;
		align-items: center;

		::ng-deep svg {
			animation: wiggle 0.1s ease-in-out;
			animation-iteration-count: 3;

			@keyframes wiggle {
				0% {transform: rotate(0deg);}
				25% {transform: rotate(-5deg) translateX(-5px);}
				75% {transform: rotate(6deg) translateX(5px);}
				100% {transform: rotate(0deg);}
			}
		}
	}

	#bingo-score {
		display: flex;
		justify-content: center;
		align-items: center;

		font-size: 3em;
	}

	.stripe {
		position: absolute;
		top: 0;
		left: 0;

		::ng-deep svg {
			animation-iteration-count: 1;
		}

		&.diag_down,
		&.diag_up {
			width: 100%;
			height: 100%;
		}

		&.diag_down,
		&.col {
			::ng-deep svg {
				mask-image: linear-gradient(90deg, #fff, #fff, #0000, #0000);
				mask-size: 300% 100%;
				mask-position: left;
				animation: clip-fade 1s ease-in-out;

				@keyframes clip-fade {
					0% {
						mask-position: right;
					}

					100% {
						mask-position: left;
					}
				}
			}
		}

		&.row {
			left: 0;
			width: 100%;

			@for $i from 0 through 3 {
				&.is-#{$i} {
					top: math.percentage(($i)*0.25);
				}
			}
		}

		&.col {
			top: 37.5%;
			width: 100%;

			@for $i from 0 through 3 {
				&.is-#{$i} {
					left: math.percentage(($i)*0.25 - 0.375);
				}
			}

				transform: rotate(90deg);
		}

		&.diag_up,
		&.row {
			::ng-deep svg {
				mask-image: linear-gradient(90deg, #fff, #fff, #0000, #0000);
				mask-size: 300% 100%;
				mask-position: left;
				animation: clip-fade 1s ease-in-out;

				@keyframes clip-fade {
					0% {
						mask-position: right;
					}

					100% {
						mask-position: left;
					}
				}
			}
		}
	}

	#validated-info{
		display: flex;
		flex-direction: row;
		:nth-child(1){
			flex: 1;
		}

		li{
			
		}
	}
}